Terminals which are not used

   STRING_LITERAL
   CONSTANT
   PTR_OP
   LEFT_OP
   RIGHT_OP
   MUL_ASSIGN
   DIV_ASSIGN
   MOD_ASSIGN
   ADD_ASSIGN
   SUB_ASSIGN
   LEFT_ASSIGN
   RIGHT_ASSIGN
   AND_ASSIGN
   XOR_ASSIGN
   OR_ASSIGN
   TYPE_NAME
   TYPEDEF
   EXTERN
   STATIC
   AUTO
   REGISTER
   LONG
   UNSIGNED
   DOUBLE
   VOLATILE
   VOID
   STRUCT
   UNION
   ENUM
   ELLIPSIS
   GOTO
   CALL


State 18 conflicts: 5 shift/reduce
State 49 conflicts: 21 reduce/reduce
State 71 conflicts: 21 shift/reduce
State 112 conflicts: 21 shift/reduce
State 128 conflicts: 3 reduce/reduce
State 162 conflicts: 1 shift/reduce
State 188 conflicts: 23 shift/reduce, 21 reduce/reduce
State 210 conflicts: 21 reduce/reduce
State 219 conflicts: 23 shift/reduce
State 220 conflicts: 1 shift/reduce
State 228 conflicts: 23 shift/reduce, 21 reduce/reduce
State 230 conflicts: 1 shift/reduce
State 236 conflicts: 2 shift/reduce
State 237 conflicts: 23 shift/reduce
State 242 conflicts: 21 reduce/reduce
State 256 conflicts: 23 shift/reduce
State 271 conflicts: 21 shift/reduce
State 273 conflicts: 22 shift/reduce
State 274 conflicts: 21 shift/reduce
State 280 conflicts: 22 reduce/reduce


Grammar

    0 $accept: program $end

    1 @1: /* empty */

    2 program: @1 MAIN block

    3 @2: /* empty */

    4 @3: /* empty */

    5 @4: /* empty */

    6 @5: /* empty */

    7 block: @2 function_parentheses @3 '{' declaration_list @4 proc_dec_list @5 statement_list return_stat '}'

    8 @6: /* empty */

    9 @7: /* empty */

   10 function_parentheses: '(' @6 parameter_list @7 ')'
   11                     | /* empty */

   12 return_stat: RETURN factor ';'
   13            | /* empty */

   14 declaration_list: declaration_list declaration_stat
   15                 | declaration_stat
   16                 | /* empty */

   17 proc_dec_list: proc_dec_stat proc_dec_list
   18              | /* empty */

   19 @8: /* empty */

   20 @9: /* empty */

   21 @10: /* empty */

   22 proc_dec_stat: PROCEDURE ID @8 @9 block @10 ';'

   23 @11: /* empty */

   24 @12: /* empty */

   25 parameter_list: parameter_stat @11 ',' @12 parameter_list
   26               | parameter_stat
   27               | /* empty */

   28 parameter_stat: type declaration_id

   29 declaration_stat: type declaration_id_list ';'

   30 @13: /* empty */

   31 @14: /* empty */

   32 declaration_stat: CONST @13 constdec_id_list @14 ';'

   33 declaration_id_list: declaration_id
   34                    | declaration_id_list ',' declaration_id

   35 @15: /* empty */

   36 constdec_id_list: ID @15 '=' expression

   37 @16: /* empty */

   38 constdec_id_list: constdec_id_list ',' ID @16 '=' expression

   39 @17: /* empty */

   40 declaration_id: ID @17 definition_stat

   41 @18: /* empty */

   42 declaration_id: ID @18 decarraylist

   43 type: INT
   44     | CHAR
   45     | FLOAT
   46     | BOOLEAN

   47 var: ID

   48 @19: /* empty */

   49 var: ID @19 arraylist

   50 @20: /* empty */

   51 arraylist: '[' expression @20 ']' arraylist
   52          | /* empty */

   53 @21: /* empty */

   54 decarraylist: '[' expression ']' @21 decarraylist
   55             | '[' expression ']'

   56 definition_stat: '=' expression
   57                | /* empty */

   58 statement_list: statement_list statement
   59               | statement
   60               | /* empty */

   61 statement: if_stat
   62          | while_stat
   63          | do_while_stat
   64          | repeat_until_stat
   65          | for_stat
   66          | switch_case_stat
   67          | read_stat
   68          | write_stat
   69          | compound_stat
   70          | expression_stat
   71          | exit_stat

   72 @22: /* empty */

   73 if_stat: IF '(' expression ')' @22 if_statement_list ELSE_stat

   74 @23: /* empty */

   75 ELSE_stat: ELSE @23 if_statement_list
   76          | /* empty */

   77 if_statement_list: '{' if_statement_list if_statement '}'
   78                  | if_statement
   79                  | /* empty */

   80 if_statement: break_stat
   81             | continue_stat
   82             | statement

   83 @24: /* empty */

   84 @25: /* empty */

   85 while_stat: WHILE @24 '(' expression ')' @25 do_statement_list

   86 @26: /* empty */

   87 @27: /* empty */

   88 do_while_stat: DO @26 do_statement_list WHILE '(' expression ')' @27 ';'

   89 do_statement_list: '{' do_statement_list do_statement '}'
   90                  | do_statement
   91                  | /* empty */

   92 do_statement: statement
   93             | break_stat
   94             | continue_stat

   95 @28: /* empty */

   96 @29: /* empty */

   97 repeat_until_stat: REPEAT @28 do_statement_list UNTIL '(' expression ')' @29 ';'

   98 @30: /* empty */

   99 @31: /* empty */

  100 @32: /* empty */

  101 for_stat: FOR '(' expression_stat @30 simple_expr ';' @31 expression @32 ')' for_operation

  102 for_operation: '{' for_opstatlist '}'
  103              | statement
  104              | break_stat

  105 for_opstatlist: for_opstatlist for_opstat
  106               | for_opstat

  107 for_opstat: statement
  108           | break_stat
  109           | continue_stat

  110 break_stat: BREAK ';'

  111 @33: /* empty */

  112 continue_stat: CONTINUE @33 ';'

  113 @34: /* empty */

  114 switch_case_stat: SWITCH '(' var @34 ')' case_list

  115 case_list: '{' case_list '}'
  116          | case_stat_list

  117 case_stat_list: case_stat_list default_stat
  118               | case_stat_list case_stat
  119               | /* empty */

  120 @35: /* empty */

  121 case_stat: CASE case_num ':' @35 statement_list case_break_stat

  122 case_break_stat: break_stat
  123                | /* empty */

  124 case_num: NUM

  125 default_stat: DEFAULT ':' statement

  126 @36: /* empty */

  127 @37: /* empty */

  128 write_stat: WRITE @36 expression @37 ';'

  129 read_stat: READ readVar ';'

  130 readVar: var
  131        | readVar ',' var

  132 compound_stat: '{' statement_list '}'

  133 expression_stat: expression ';'
  134                | ';'

  135 @38: /* empty */

  136 expression: var @38 '=' expression
  137           | simple_expr

  138 simple_expr: additive_expr
  139            | additive_expr INC_OP
  140            | additive_expr DEC_OP
  141            | additive_expr '>' additive_expr
  142            | additive_expr '<' additive_expr
  143            | additive_expr LE_OP additive_expr
  144            | additive_expr GE_OP additive_expr
  145            | additive_expr EQ_OP additive_expr
  146            | additive_expr NE_OP additive_expr
  147            | '!' additive_expr
  148            | additive_expr AND_OP additive_expr
  149            | additive_expr OR_OP additive_expr
  150            | additive_expr '^' additive_expr

  151 additive_expr: additive_expr '+' term
  152              | additive_expr '-' term
  153              | term

  154 term: term '*' function
  155     | term '/' function
  156     | term '%' function
  157     | function

  158 function: ODD_EVAL '(' factor ')'
  159         | SQRT '(' factor ')'
  160         | ID '(' call_value_list ')'
  161         | factor

  162 call_value_list: call_value_list ',' call_value_stat
  163                | call_value_stat
  164                | /* empty */

  165 call_value_stat: var

  166 factor: '(' expression ')'
  167       | var
  168       | NUM
  169       | CHARACTER
  170       | FLOATNUM
  171       | TRUE
  172       | FALSE

  173 exit_stat: EXIT ';'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 147
'%' (37) 156
'(' (40) 10 73 85 88 97 101 114 158 159 160 166
')' (41) 10 73 85 88 97 101 114 158 159 160 166
'*' (42) 154
'+' (43) 151
',' (44) 25 34 38 131 162
'-' (45) 152
'/' (47) 155
':' (58) 121 125
';' (59) 12 22 29 32 88 97 101 110 112 128 129 133 134 173
'<' (60) 142
'=' (61) 36 38 56 136
'>' (62) 141
'[' (91) 51 54 55
']' (93) 51 54 55
'^' (94) 150
'{' (123) 7 77 89 102 115 132
'}' (125) 7 77 89 102 115 132
error (256)
MAIN (258) 2
ID (259) 22 36 38 40 42 47 49 160
NUM (260) 124 168
TRUE (261) 171
FALSE (262) 172
FLOATNUM (263) 170
CHARACTER (264) 169
STRING_LITERAL (265)
CONSTANT (266)
PROCEDURE (267) 22
PTR_OP (268)
INC_OP (269) 139
DEC_OP (270) 140
LEFT_OP (271)
RIGHT_OP (272)
LE_OP (273) 143
GE_OP (274) 144
EQ_OP (275) 145
NE_OP (276) 146
AND_OP (277) 148
OR_OP (278) 149
MUL_ASSIGN (279)
DIV_ASSIGN (280)
MOD_ASSIGN (281)
ADD_ASSIGN (282)
SUB_ASSIGN (283)
LEFT_ASSIGN (284)
RIGHT_ASSIGN (285)
AND_ASSIGN (286)
XOR_ASSIGN (287)
OR_ASSIGN (288)
TYPE_NAME (289)
ODD_EVAL (290) 158
SQRT (291) 159
READ (292) 129
WRITE (293) 128
TYPEDEF (294)
EXTERN (295)
STATIC (296)
AUTO (297)
REGISTER (298)
CHAR (299) 44
INT (300) 43
LONG (301)
UNSIGNED (302)
FLOAT (303) 45
DOUBLE (304)
CONST (305) 32
VOLATILE (306)
VOID (307)
BOOLEAN (308) 46
STRUCT (309)
UNION (310)
ENUM (311)
ELLIPSIS (312)
CASE (313) 121
DEFAULT (314) 125
IF (315) 73
ELSE (316) 75
SWITCH (317) 114
WHILE (318) 85 88
DO (319) 88
FOR (320) 101
GOTO (321)
CONTINUE (322) 112
BREAK (323) 110
RETURN (324) 12
EXIT (325) 173
REPEAT (326) 97
UNTIL (327) 97
CALL (328)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
program (94)
    on left: 2, on right: 0
@1 (95)
    on left: 1, on right: 2
block (96)
    on left: 7, on right: 2 22
@2 (97)
    on left: 3, on right: 7
@3 (98)
    on left: 4, on right: 7
@4 (99)
    on left: 5, on right: 7
@5 (100)
    on left: 6, on right: 7
function_parentheses (101)
    on left: 10 11, on right: 7
@6 (102)
    on left: 8, on right: 10
@7 (103)
    on left: 9, on right: 10
return_stat (104)
    on left: 12 13, on right: 7
declaration_list (105)
    on left: 14 15 16, on right: 7 14
proc_dec_list (106)
    on left: 17 18, on right: 7 17
proc_dec_stat (107)
    on left: 22, on right: 17
@8 (108)
    on left: 19, on right: 22
@9 (109)
    on left: 20, on right: 22
@10 (110)
    on left: 21, on right: 22
parameter_list (111)
    on left: 25 26 27, on right: 10 25
@11 (112)
    on left: 23, on right: 25
@12 (113)
    on left: 24, on right: 25
parameter_stat (114)
    on left: 28, on right: 25 26
declaration_stat (115)
    on left: 29 32, on right: 14 15
@13 (116)
    on left: 30, on right: 32
@14 (117)
    on left: 31, on right: 32
declaration_id_list (118)
    on left: 33 34, on right: 29 34
constdec_id_list (119)
    on left: 36 38, on right: 32 38
@15 (120)
    on left: 35, on right: 36
@16 (121)
    on left: 37, on right: 38
declaration_id (122)
    on left: 40 42, on right: 28 33 34
@17 (123)
    on left: 39, on right: 40
@18 (124)
    on left: 41, on right: 42
type (125)
    on left: 43 44 45 46, on right: 28 29
var (126)
    on left: 47 49, on right: 114 130 131 136 165 167
@19 (127)
    on left: 48, on right: 49
arraylist (128)
    on left: 51 52, on right: 49 51
@20 (129)
    on left: 50, on right: 51
decarraylist (130)
    on left: 54 55, on right: 42 54
@21 (131)
    on left: 53, on right: 54
definition_stat (132)
    on left: 56 57, on right: 40
statement_list (133)
    on left: 58 59 60, on right: 7 58 121 132
statement (134)
    on left: 61 62 63 64 65 66 67 68 69 70 71, on right: 58 59 82 92
    103 107 125
if_stat (135)
    on left: 73, on right: 61
@22 (136)
    on left: 72, on right: 73
ELSE_stat (137)
    on left: 75 76, on right: 73
@23 (138)
    on left: 74, on right: 75
if_statement_list (139)
    on left: 77 78 79, on right: 73 75 77
if_statement (140)
    on left: 80 81 82, on right: 77 78
while_stat (141)
    on left: 85, on right: 62
@24 (142)
    on left: 83, on right: 85
@25 (143)
    on left: 84, on right: 85
do_while_stat (144)
    on left: 88, on right: 63
@26 (145)
    on left: 86, on right: 88
@27 (146)
    on left: 87, on right: 88
do_statement_list (147)
    on left: 89 90 91, on right: 85 88 89 97
do_statement (148)
    on left: 92 93 94, on right: 89 90
repeat_until_stat (149)
    on left: 97, on right: 64
@28 (150)
    on left: 95, on right: 97
@29 (151)
    on left: 96, on right: 97
for_stat (152)
    on left: 101, on right: 65
@30 (153)
    on left: 98, on right: 101
@31 (154)
    on left: 99, on right: 101
@32 (155)
    on left: 100, on right: 101
for_operation (156)
    on left: 102 103 104, on right: 101
for_opstatlist (157)
    on left: 105 106, on right: 102 105
for_opstat (158)
    on left: 107 108 109, on right: 105 106
break_stat (159)
    on left: 110, on right: 80 93 104 108 122
continue_stat (160)
    on left: 112, on right: 81 94 109
@33 (161)
    on left: 111, on right: 112
switch_case_stat (162)
    on left: 114, on right: 66
@34 (163)
    on left: 113, on right: 114
case_list (164)
    on left: 115 116, on right: 114 115
case_stat_list (165)
    on left: 117 118 119, on right: 116 117 118
case_stat (166)
    on left: 121, on right: 118
@35 (167)
    on left: 120, on right: 121
case_break_stat (168)
    on left: 122 123, on right: 121
case_num (169)
    on left: 124, on right: 121
default_stat (170)
    on left: 125, on right: 117
write_stat (171)
    on left: 128, on right: 68
@36 (172)
    on left: 126, on right: 128
@37 (173)
    on left: 127, on right: 128
read_stat (174)
    on left: 129, on right: 67
readVar (175)
    on left: 130 131, on right: 129 131
compound_stat (176)
    on left: 132, on right: 69
expression_stat (177)
    on left: 133 134, on right: 70 101
expression (178)
    on left: 136 137, on right: 36 38 51 54 55 56 73 85 88 97 101 128
    133 136 166
@38 (179)
    on left: 135, on right: 136
simple_expr (180)
    on left: 138 139 140 141 142 143 144 145 146 147 148 149 150,
    on right: 101 137
additive_expr (181)
    on left: 151 152 153, on right: 138 139 140 141 142 143 144 145
    146 147 148 149 150 151 152
term (182)
    on left: 154 155 156 157, on right: 151 152 153 154 155 156
function (183)
    on left: 158 159 160 161, on right: 154 155 156 157
call_value_list (184)
    on left: 162 163 164, on right: 160 162
call_value_stat (185)
    on left: 165, on right: 162 163
factor (186)
    on left: 166 167 168 169 170 171 172, on right: 12 158 159 161
exit_stat (187)
    on left: 173, on right: 71


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 (@1)

    program  go to state 1
    @1       go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    2 program: @1 . MAIN block

    MAIN  shift, and go to state 4


state 3

    0 $accept: program $end .

    $default  accept


state 4

    2 program: @1 MAIN . block

    $default  reduce using rule 3 (@2)

    block  go to state 5
    @2     go to state 6


state 5

    2 program: @1 MAIN block .

    $default  reduce using rule 2 (program)


state 6

    7 block: @2 . function_parentheses @3 '{' declaration_list @4 proc_dec_list @5 statement_list return_stat '}'

    '('  shift, and go to state 7

    $default  reduce using rule 11 (function_parentheses)

    function_parentheses  go to state 8


state 7

   10 function_parentheses: '(' . @6 parameter_list @7 ')'

    $default  reduce using rule 8 (@6)

    @6  go to state 9


state 8

    7 block: @2 function_parentheses . @3 '{' declaration_list @4 proc_dec_list @5 statement_list return_stat '}'

    $default  reduce using rule 4 (@3)

    @3  go to state 10


state 9

   10 function_parentheses: '(' @6 . parameter_list @7 ')'

    CHAR     shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    BOOLEAN  shift, and go to state 14

    $default  reduce using rule 27 (parameter_list)

    parameter_list  go to state 15
    parameter_stat  go to state 16
    type            go to state 17


state 10

    7 block: @2 function_parentheses @3 . '{' declaration_list @4 proc_dec_list @5 statement_list return_stat '}'

    '{'  shift, and go to state 18


state 11

   44 type: CHAR .

    $default  reduce using rule 44 (type)


state 12

   43 type: INT .

    $default  reduce using rule 43 (type)


state 13

   45 type: FLOAT .

    $default  reduce using rule 45 (type)


state 14

   46 type: BOOLEAN .

    $default  reduce using rule 46 (type)


state 15

   10 function_parentheses: '(' @6 parameter_list . @7 ')'

    $default  reduce using rule 9 (@7)

    @7  go to state 19


state 16

   25 parameter_list: parameter_stat . @11 ',' @12 parameter_list
   26               | parameter_stat .

    ')'       reduce using rule 26 (parameter_list)
    $default  reduce using rule 23 (@11)

    @11  go to state 20


state 17

   28 parameter_stat: type . declaration_id

    ID  shift, and go to state 21

    declaration_id  go to state 22


state 18

    7 block: @2 function_parentheses @3 '{' . declaration_list @4 proc_dec_list @5 statement_list return_stat '}'

    CHAR     shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    CONST    shift, and go to state 23
    BOOLEAN  shift, and go to state 14

    CHAR      [reduce using rule 16 (declaration_list)]
    INT       [reduce using rule 16 (declaration_list)]
    FLOAT     [reduce using rule 16 (declaration_list)]
    CONST     [reduce using rule 16 (declaration_list)]
    BOOLEAN   [reduce using rule 16 (declaration_list)]
    $default  reduce using rule 16 (declaration_list)

    declaration_list  go to state 24
    declaration_stat  go to state 25
    type              go to state 26


state 19

   10 function_parentheses: '(' @6 parameter_list @7 . ')'

    ')'  shift, and go to state 27


state 20

   25 parameter_list: parameter_stat @11 . ',' @12 parameter_list

    ','  shift, and go to state 28


state 21

   40 declaration_id: ID . @17 definition_stat
   42               | ID . @18 decarraylist

    '['       reduce using rule 41 (@18)
    $default  reduce using rule 39 (@17)

    @17  go to state 29
    @18  go to state 30


state 22

   28 parameter_stat: type declaration_id .

    $default  reduce using rule 28 (parameter_stat)


state 23

   32 declaration_stat: CONST . @13 constdec_id_list @14 ';'

    $default  reduce using rule 30 (@13)

    @13  go to state 31


state 24

    7 block: @2 function_parentheses @3 '{' declaration_list . @4 proc_dec_list @5 statement_list return_stat '}'
   14 declaration_list: declaration_list . declaration_stat

    CHAR     shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    CONST    shift, and go to state 23
    BOOLEAN  shift, and go to state 14

    $default  reduce using rule 5 (@4)

    @4                go to state 32
    declaration_stat  go to state 33
    type              go to state 26


state 25

   15 declaration_list: declaration_stat .

    $default  reduce using rule 15 (declaration_list)


state 26

   29 declaration_stat: type . declaration_id_list ';'

    ID  shift, and go to state 21

    declaration_id_list  go to state 34
    declaration_id       go to state 35


state 27

   10 function_parentheses: '(' @6 parameter_list @7 ')' .

    $default  reduce using rule 10 (function_parentheses)


state 28

   25 parameter_list: parameter_stat @11 ',' . @12 parameter_list

    $default  reduce using rule 24 (@12)

    @12  go to state 36


state 29

   40 declaration_id: ID @17 . definition_stat

    '='  shift, and go to state 37

    $default  reduce using rule 57 (definition_stat)

    definition_stat  go to state 38


state 30

   42 declaration_id: ID @18 . decarraylist

    '['  shift, and go to state 39

    decarraylist  go to state 40


state 31

   32 declaration_stat: CONST @13 . constdec_id_list @14 ';'

    ID  shift, and go to state 41

    constdec_id_list  go to state 42


state 32

    7 block: @2 function_parentheses @3 '{' declaration_list @4 . proc_dec_list @5 statement_list return_stat '}'

    PROCEDURE  shift, and go to state 43

    $default  reduce using rule 18 (proc_dec_list)

    proc_dec_list  go to state 44
    proc_dec_stat  go to state 45


state 33

   14 declaration_list: declaration_list declaration_stat .

    $default  reduce using rule 14 (declaration_list)


state 34

   29 declaration_stat: type declaration_id_list . ';'
   34 declaration_id_list: declaration_id_list . ',' declaration_id

    ';'  shift, and go to state 46
    ','  shift, and go to state 47


state 35

   33 declaration_id_list: declaration_id .

    $default  reduce using rule 33 (declaration_id_list)


state 36

   25 parameter_list: parameter_stat @11 ',' @12 . parameter_list

    CHAR     shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    BOOLEAN  shift, and go to state 14

    $default  reduce using rule 27 (parameter_list)

    parameter_list  go to state 48
    parameter_stat  go to state 16
    type            go to state 17


state 37

   56 definition_stat: '=' . expression

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 60
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 38

   40 declaration_id: ID @17 definition_stat .

    $default  reduce using rule 40 (declaration_id)


state 39

   54 decarraylist: '[' . expression ']' @21 decarraylist
   55             | '[' . expression ']'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 66
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 40

   42 declaration_id: ID @18 decarraylist .

    $default  reduce using rule 42 (declaration_id)


state 41

   36 constdec_id_list: ID . @15 '=' expression

    $default  reduce using rule 35 (@15)

    @15  go to state 67


state 42

   32 declaration_stat: CONST @13 constdec_id_list . @14 ';'
   38 constdec_id_list: constdec_id_list . ',' ID @16 '=' expression

    ','  shift, and go to state 68

    $default  reduce using rule 31 (@14)

    @14  go to state 69


state 43

   22 proc_dec_stat: PROCEDURE . ID @8 @9 block @10 ';'

    ID  shift, and go to state 70


state 44

    7 block: @2 function_parentheses @3 '{' declaration_list @4 proc_dec_list . @5 statement_list return_stat '}'

    $default  reduce using rule 6 (@5)

    @5  go to state 71


state 45

   17 proc_dec_list: proc_dec_stat . proc_dec_list

    PROCEDURE  shift, and go to state 43

    $default  reduce using rule 18 (proc_dec_list)

    proc_dec_list  go to state 72
    proc_dec_stat  go to state 45


state 46

   29 declaration_stat: type declaration_id_list ';' .

    $default  reduce using rule 29 (declaration_stat)


state 47

   34 declaration_id_list: declaration_id_list ',' . declaration_id

    ID  shift, and go to state 21

    declaration_id  go to state 73


state 48

   25 parameter_list: parameter_stat @11 ',' @12 parameter_list .

    $default  reduce using rule 25 (parameter_list)


state 49

   47 var: ID .
   49    | ID . @19 arraylist
  160 function: ID . '(' call_value_list ')'

    '('  shift, and go to state 74

    INC_OP    reduce using rule 47 (var)
    INC_OP    [reduce using rule 48 (@19)]
    DEC_OP    reduce using rule 47 (var)
    DEC_OP    [reduce using rule 48 (@19)]
    LE_OP     reduce using rule 47 (var)
    LE_OP     [reduce using rule 48 (@19)]
    GE_OP     reduce using rule 47 (var)
    GE_OP     [reduce using rule 48 (@19)]
    EQ_OP     reduce using rule 47 (var)
    EQ_OP     [reduce using rule 48 (@19)]
    NE_OP     reduce using rule 47 (var)
    NE_OP     [reduce using rule 48 (@19)]
    AND_OP    reduce using rule 47 (var)
    AND_OP    [reduce using rule 48 (@19)]
    OR_OP     reduce using rule 47 (var)
    OR_OP     [reduce using rule 48 (@19)]
    ')'       reduce using rule 47 (var)
    ')'       [reduce using rule 48 (@19)]
    ';'       reduce using rule 47 (var)
    ';'       [reduce using rule 48 (@19)]
    ','       reduce using rule 47 (var)
    ','       [reduce using rule 48 (@19)]
    '='       reduce using rule 47 (var)
    '='       [reduce using rule 48 (@19)]
    '['       reduce using rule 48 (@19)
    ']'       reduce using rule 47 (var)
    ']'       [reduce using rule 48 (@19)]
    '>'       reduce using rule 47 (var)
    '>'       [reduce using rule 48 (@19)]
    '<'       reduce using rule 47 (var)
    '<'       [reduce using rule 48 (@19)]
    '^'       reduce using rule 47 (var)
    '^'       [reduce using rule 48 (@19)]
    '+'       reduce using rule 47 (var)
    '+'       [reduce using rule 48 (@19)]
    '-'       reduce using rule 47 (var)
    '-'       [reduce using rule 48 (@19)]
    '*'       reduce using rule 47 (var)
    '*'       [reduce using rule 48 (@19)]
    '/'       reduce using rule 47 (var)
    '/'       [reduce using rule 48 (@19)]
    '%'       reduce using rule 47 (var)
    '%'       [reduce using rule 48 (@19)]
    $default  reduce using rule 47 (var)

    @19  go to state 75


state 50

  168 factor: NUM .

    $default  reduce using rule 168 (factor)


state 51

  171 factor: TRUE .

    $default  reduce using rule 171 (factor)


state 52

  172 factor: FALSE .

    $default  reduce using rule 172 (factor)


state 53

  170 factor: FLOATNUM .

    $default  reduce using rule 170 (factor)


state 54

  169 factor: CHARACTER .

    $default  reduce using rule 169 (factor)


state 55

  158 function: ODD_EVAL . '(' factor ')'

    '('  shift, and go to state 76


state 56

  159 function: SQRT . '(' factor ')'

    '('  shift, and go to state 77


state 57

  166 factor: '(' . expression ')'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 78
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 58

  147 simple_expr: '!' . additive_expr

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var            go to state 79
    additive_expr  go to state 80
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 59

  136 expression: var . @38 '=' expression
  167 factor: var .

    '='       reduce using rule 135 (@38)
    $default  reduce using rule 167 (factor)

    @38  go to state 81


state 60

   56 definition_stat: '=' expression .

    $default  reduce using rule 56 (definition_stat)


state 61

  137 expression: simple_expr .

    $default  reduce using rule 137 (expression)


state 62

  138 simple_expr: additive_expr .
  139            | additive_expr . INC_OP
  140            | additive_expr . DEC_OP
  141            | additive_expr . '>' additive_expr
  142            | additive_expr . '<' additive_expr
  143            | additive_expr . LE_OP additive_expr
  144            | additive_expr . GE_OP additive_expr
  145            | additive_expr . EQ_OP additive_expr
  146            | additive_expr . NE_OP additive_expr
  148            | additive_expr . AND_OP additive_expr
  149            | additive_expr . OR_OP additive_expr
  150            | additive_expr . '^' additive_expr
  151 additive_expr: additive_expr . '+' term
  152              | additive_expr . '-' term

    INC_OP  shift, and go to state 82
    DEC_OP  shift, and go to state 83
    LE_OP   shift, and go to state 84
    GE_OP   shift, and go to state 85
    EQ_OP   shift, and go to state 86
    NE_OP   shift, and go to state 87
    AND_OP  shift, and go to state 88
    OR_OP   shift, and go to state 89
    '>'     shift, and go to state 90
    '<'     shift, and go to state 91
    '^'     shift, and go to state 92
    '+'     shift, and go to state 93
    '-'     shift, and go to state 94

    $default  reduce using rule 138 (simple_expr)


state 63

  153 additive_expr: term .
  154 term: term . '*' function
  155     | term . '/' function
  156     | term . '%' function

    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97

    $default  reduce using rule 153 (additive_expr)


state 64

  157 term: function .

    $default  reduce using rule 157 (term)


state 65

  161 function: factor .

    $default  reduce using rule 161 (function)


state 66

   54 decarraylist: '[' expression . ']' @21 decarraylist
   55             | '[' expression . ']'

    ']'  shift, and go to state 98


state 67

   36 constdec_id_list: ID @15 . '=' expression

    '='  shift, and go to state 99


state 68

   38 constdec_id_list: constdec_id_list ',' . ID @16 '=' expression

    ID  shift, and go to state 100


state 69

   32 declaration_stat: CONST @13 constdec_id_list @14 . ';'

    ';'  shift, and go to state 101


state 70

   22 proc_dec_stat: PROCEDURE ID . @8 @9 block @10 ';'

    $default  reduce using rule 19 (@8)

    @8  go to state 102


state 71

    7 block: @2 function_parentheses @3 '{' declaration_list @4 proc_dec_list @5 . statement_list return_stat '}'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 112
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    ID         [reduce using rule 60 (statement_list)]
    NUM        [reduce using rule 60 (statement_list)]
    TRUE       [reduce using rule 60 (statement_list)]
    FALSE      [reduce using rule 60 (statement_list)]
    FLOATNUM   [reduce using rule 60 (statement_list)]
    CHARACTER  [reduce using rule 60 (statement_list)]
    ODD_EVAL   [reduce using rule 60 (statement_list)]
    SQRT       [reduce using rule 60 (statement_list)]
    READ       [reduce using rule 60 (statement_list)]
    WRITE      [reduce using rule 60 (statement_list)]
    IF         [reduce using rule 60 (statement_list)]
    SWITCH     [reduce using rule 60 (statement_list)]
    WHILE      [reduce using rule 60 (statement_list)]
    DO         [reduce using rule 60 (statement_list)]
    FOR        [reduce using rule 60 (statement_list)]
    EXIT       [reduce using rule 60 (statement_list)]
    REPEAT     [reduce using rule 60 (statement_list)]
    '{'        [reduce using rule 60 (statement_list)]
    '('        [reduce using rule 60 (statement_list)]
    ';'        [reduce using rule 60 (statement_list)]
    '!'        [reduce using rule 60 (statement_list)]
    $default   reduce using rule 60 (statement_list)

    var                go to state 59
    statement_list     go to state 114
    statement          go to state 115
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 72

   17 proc_dec_list: proc_dec_stat proc_dec_list .

    $default  reduce using rule 17 (proc_dec_list)


state 73

   34 declaration_id_list: declaration_id_list ',' declaration_id .

    $default  reduce using rule 34 (declaration_id_list)


state 74

  160 function: ID '(' . call_value_list ')'

    ID  shift, and go to state 128

    $default  reduce using rule 164 (call_value_list)

    var              go to state 129
    call_value_list  go to state 130
    call_value_stat  go to state 131


state 75

   49 var: ID @19 . arraylist

    '['  shift, and go to state 132

    $default  reduce using rule 52 (arraylist)

    arraylist  go to state 133


state 76

  158 function: ODD_EVAL '(' . factor ')'

    ID         shift, and go to state 128
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    '('        shift, and go to state 57

    var     go to state 79
    factor  go to state 134


state 77

  159 function: SQRT '(' . factor ')'

    ID         shift, and go to state 128
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    '('        shift, and go to state 57

    var     go to state 79
    factor  go to state 135


state 78

  166 factor: '(' expression . ')'

    ')'  shift, and go to state 136


state 79

  167 factor: var .

    $default  reduce using rule 167 (factor)


state 80

  147 simple_expr: '!' additive_expr .
  151 additive_expr: additive_expr . '+' term
  152              | additive_expr . '-' term

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94

    $default  reduce using rule 147 (simple_expr)


state 81

  136 expression: var @38 . '=' expression

    '='  shift, and go to state 137


state 82

  139 simple_expr: additive_expr INC_OP .

    $default  reduce using rule 139 (simple_expr)


state 83

  140 simple_expr: additive_expr DEC_OP .

    $default  reduce using rule 140 (simple_expr)


state 84

  143 simple_expr: additive_expr LE_OP . additive_expr

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var            go to state 79
    additive_expr  go to state 138
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 85

  144 simple_expr: additive_expr GE_OP . additive_expr

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var            go to state 79
    additive_expr  go to state 139
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 86

  145 simple_expr: additive_expr EQ_OP . additive_expr

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var            go to state 79
    additive_expr  go to state 140
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 87

  146 simple_expr: additive_expr NE_OP . additive_expr

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var            go to state 79
    additive_expr  go to state 141
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 88

  148 simple_expr: additive_expr AND_OP . additive_expr

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var            go to state 79
    additive_expr  go to state 142
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 89

  149 simple_expr: additive_expr OR_OP . additive_expr

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var            go to state 79
    additive_expr  go to state 143
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 90

  141 simple_expr: additive_expr '>' . additive_expr

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var            go to state 79
    additive_expr  go to state 144
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 91

  142 simple_expr: additive_expr '<' . additive_expr

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var            go to state 79
    additive_expr  go to state 145
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 92

  150 simple_expr: additive_expr '^' . additive_expr

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var            go to state 79
    additive_expr  go to state 146
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 93

  151 additive_expr: additive_expr '+' . term

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var       go to state 79
    term      go to state 147
    function  go to state 64
    factor    go to state 65


state 94

  152 additive_expr: additive_expr '-' . term

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var       go to state 79
    term      go to state 148
    function  go to state 64
    factor    go to state 65


state 95

  154 term: term '*' . function

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var       go to state 79
    function  go to state 149
    factor    go to state 65


state 96

  155 term: term '/' . function

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var       go to state 79
    function  go to state 150
    factor    go to state 65


state 97

  156 term: term '%' . function

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57

    var       go to state 79
    function  go to state 151
    factor    go to state 65


state 98

   54 decarraylist: '[' expression ']' . @21 decarraylist
   55             | '[' expression ']' .

    '['       reduce using rule 53 (@21)
    $default  reduce using rule 55 (decarraylist)

    @21  go to state 152


state 99

   36 constdec_id_list: ID @15 '=' . expression

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 153
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 100

   38 constdec_id_list: constdec_id_list ',' ID . @16 '=' expression

    $default  reduce using rule 37 (@16)

    @16  go to state 154


state 101

   32 declaration_stat: CONST @13 constdec_id_list @14 ';' .

    $default  reduce using rule 32 (declaration_stat)


state 102

   22 proc_dec_stat: PROCEDURE ID @8 . @9 block @10 ';'

    $default  reduce using rule 20 (@9)

    @9  go to state 155


state 103

  129 read_stat: READ . readVar ';'

    ID  shift, and go to state 128

    var      go to state 156
    readVar  go to state 157


state 104

  128 write_stat: WRITE . @36 expression @37 ';'

    $default  reduce using rule 126 (@36)

    @36  go to state 158


state 105

   73 if_stat: IF . '(' expression ')' @22 if_statement_list ELSE_stat

    '('  shift, and go to state 159


state 106

  114 switch_case_stat: SWITCH . '(' var @34 ')' case_list

    '('  shift, and go to state 160


state 107

   85 while_stat: WHILE . @24 '(' expression ')' @25 do_statement_list

    $default  reduce using rule 83 (@24)

    @24  go to state 161


state 108

   88 do_while_stat: DO . @26 do_statement_list WHILE '(' expression ')' @27 ';'

    $default  reduce using rule 86 (@26)

    @26  go to state 162


state 109

  101 for_stat: FOR . '(' expression_stat @30 simple_expr ';' @31 expression @32 ')' for_operation

    '('  shift, and go to state 163


state 110

  173 exit_stat: EXIT . ';'

    ';'  shift, and go to state 164


state 111

   97 repeat_until_stat: REPEAT . @28 do_statement_list UNTIL '(' expression ')' @29 ';'

    $default  reduce using rule 95 (@28)

    @28  go to state 165


state 112

  132 compound_stat: '{' . statement_list '}'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 112
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    ID         [reduce using rule 60 (statement_list)]
    NUM        [reduce using rule 60 (statement_list)]
    TRUE       [reduce using rule 60 (statement_list)]
    FALSE      [reduce using rule 60 (statement_list)]
    FLOATNUM   [reduce using rule 60 (statement_list)]
    CHARACTER  [reduce using rule 60 (statement_list)]
    ODD_EVAL   [reduce using rule 60 (statement_list)]
    SQRT       [reduce using rule 60 (statement_list)]
    READ       [reduce using rule 60 (statement_list)]
    WRITE      [reduce using rule 60 (statement_list)]
    IF         [reduce using rule 60 (statement_list)]
    SWITCH     [reduce using rule 60 (statement_list)]
    WHILE      [reduce using rule 60 (statement_list)]
    DO         [reduce using rule 60 (statement_list)]
    FOR        [reduce using rule 60 (statement_list)]
    EXIT       [reduce using rule 60 (statement_list)]
    REPEAT     [reduce using rule 60 (statement_list)]
    '{'        [reduce using rule 60 (statement_list)]
    '('        [reduce using rule 60 (statement_list)]
    ';'        [reduce using rule 60 (statement_list)]
    '!'        [reduce using rule 60 (statement_list)]
    $default   reduce using rule 60 (statement_list)

    var                go to state 59
    statement_list     go to state 166
    statement          go to state 115
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 113

  134 expression_stat: ';' .

    $default  reduce using rule 134 (expression_stat)


state 114

    7 block: @2 function_parentheses @3 '{' declaration_list @4 proc_dec_list @5 statement_list . return_stat '}'
   58 statement_list: statement_list . statement

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    RETURN     shift, and go to state 167
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 112
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    $default  reduce using rule 13 (return_stat)

    return_stat        go to state 168
    var                go to state 59
    statement          go to state 169
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 115

   59 statement_list: statement .

    $default  reduce using rule 59 (statement_list)


state 116

   61 statement: if_stat .

    $default  reduce using rule 61 (statement)


state 117

   62 statement: while_stat .

    $default  reduce using rule 62 (statement)


state 118

   63 statement: do_while_stat .

    $default  reduce using rule 63 (statement)


state 119

   64 statement: repeat_until_stat .

    $default  reduce using rule 64 (statement)


state 120

   65 statement: for_stat .

    $default  reduce using rule 65 (statement)


state 121

   66 statement: switch_case_stat .

    $default  reduce using rule 66 (statement)


state 122

   68 statement: write_stat .

    $default  reduce using rule 68 (statement)


state 123

   67 statement: read_stat .

    $default  reduce using rule 67 (statement)


state 124

   69 statement: compound_stat .

    $default  reduce using rule 69 (statement)


state 125

   70 statement: expression_stat .

    $default  reduce using rule 70 (statement)


state 126

  133 expression_stat: expression . ';'

    ';'  shift, and go to state 170


state 127

   71 statement: exit_stat .

    $default  reduce using rule 71 (statement)


state 128

   47 var: ID .
   49    | ID . @19 arraylist

    ')'       reduce using rule 47 (var)
    ')'       [reduce using rule 48 (@19)]
    ';'       reduce using rule 47 (var)
    ';'       [reduce using rule 48 (@19)]
    ','       reduce using rule 47 (var)
    ','       [reduce using rule 48 (@19)]
    '['       reduce using rule 48 (@19)
    $default  reduce using rule 47 (var)

    @19  go to state 75


state 129

  165 call_value_stat: var .

    $default  reduce using rule 165 (call_value_stat)


state 130

  160 function: ID '(' call_value_list . ')'
  162 call_value_list: call_value_list . ',' call_value_stat

    ')'  shift, and go to state 171
    ','  shift, and go to state 172


state 131

  163 call_value_list: call_value_stat .

    $default  reduce using rule 163 (call_value_list)


state 132

   51 arraylist: '[' . expression @20 ']' arraylist

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 173
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 133

   49 var: ID @19 arraylist .

    $default  reduce using rule 49 (var)


state 134

  158 function: ODD_EVAL '(' factor . ')'

    ')'  shift, and go to state 174


state 135

  159 function: SQRT '(' factor . ')'

    ')'  shift, and go to state 175


state 136

  166 factor: '(' expression ')' .

    $default  reduce using rule 166 (factor)


state 137

  136 expression: var @38 '=' . expression

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 176
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 138

  143 simple_expr: additive_expr LE_OP additive_expr .
  151 additive_expr: additive_expr . '+' term
  152              | additive_expr . '-' term

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94

    $default  reduce using rule 143 (simple_expr)


state 139

  144 simple_expr: additive_expr GE_OP additive_expr .
  151 additive_expr: additive_expr . '+' term
  152              | additive_expr . '-' term

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94

    $default  reduce using rule 144 (simple_expr)


state 140

  145 simple_expr: additive_expr EQ_OP additive_expr .
  151 additive_expr: additive_expr . '+' term
  152              | additive_expr . '-' term

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94

    $default  reduce using rule 145 (simple_expr)


state 141

  146 simple_expr: additive_expr NE_OP additive_expr .
  151 additive_expr: additive_expr . '+' term
  152              | additive_expr . '-' term

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94

    $default  reduce using rule 146 (simple_expr)


state 142

  148 simple_expr: additive_expr AND_OP additive_expr .
  151 additive_expr: additive_expr . '+' term
  152              | additive_expr . '-' term

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94

    $default  reduce using rule 148 (simple_expr)


state 143

  149 simple_expr: additive_expr OR_OP additive_expr .
  151 additive_expr: additive_expr . '+' term
  152              | additive_expr . '-' term

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94

    $default  reduce using rule 149 (simple_expr)


state 144

  141 simple_expr: additive_expr '>' additive_expr .
  151 additive_expr: additive_expr . '+' term
  152              | additive_expr . '-' term

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94

    $default  reduce using rule 141 (simple_expr)


state 145

  142 simple_expr: additive_expr '<' additive_expr .
  151 additive_expr: additive_expr . '+' term
  152              | additive_expr . '-' term

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94

    $default  reduce using rule 142 (simple_expr)


state 146

  150 simple_expr: additive_expr '^' additive_expr .
  151 additive_expr: additive_expr . '+' term
  152              | additive_expr . '-' term

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94

    $default  reduce using rule 150 (simple_expr)


state 147

  151 additive_expr: additive_expr '+' term .
  154 term: term . '*' function
  155     | term . '/' function
  156     | term . '%' function

    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97

    $default  reduce using rule 151 (additive_expr)


state 148

  152 additive_expr: additive_expr '-' term .
  154 term: term . '*' function
  155     | term . '/' function
  156     | term . '%' function

    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97

    $default  reduce using rule 152 (additive_expr)


state 149

  154 term: term '*' function .

    $default  reduce using rule 154 (term)


state 150

  155 term: term '/' function .

    $default  reduce using rule 155 (term)


state 151

  156 term: term '%' function .

    $default  reduce using rule 156 (term)


state 152

   54 decarraylist: '[' expression ']' @21 . decarraylist

    '['  shift, and go to state 39

    decarraylist  go to state 177


state 153

   36 constdec_id_list: ID @15 '=' expression .

    $default  reduce using rule 36 (constdec_id_list)


state 154

   38 constdec_id_list: constdec_id_list ',' ID @16 . '=' expression

    '='  shift, and go to state 178


state 155

   22 proc_dec_stat: PROCEDURE ID @8 @9 . block @10 ';'

    $default  reduce using rule 3 (@2)

    block  go to state 179
    @2     go to state 6


state 156

  130 readVar: var .

    $default  reduce using rule 130 (readVar)


state 157

  129 read_stat: READ readVar . ';'
  131 readVar: readVar . ',' var

    ';'  shift, and go to state 180
    ','  shift, and go to state 181


state 158

  128 write_stat: WRITE @36 . expression @37 ';'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 182
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 159

   73 if_stat: IF '(' . expression ')' @22 if_statement_list ELSE_stat

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 183
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 160

  114 switch_case_stat: SWITCH '(' . var @34 ')' case_list

    ID  shift, and go to state 128

    var  go to state 184


state 161

   85 while_stat: WHILE @24 . '(' expression ')' @25 do_statement_list

    '('  shift, and go to state 185


state 162

   88 do_while_stat: DO @26 . do_statement_list WHILE '(' expression ')' @27 ';'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    CONTINUE   shift, and go to state 186
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 188
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    WHILE  [reduce using rule 91 (do_statement_list)]

    var                go to state 59
    statement          go to state 189
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    do_statement_list  go to state 190
    do_statement       go to state 191
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    break_stat         go to state 192
    continue_stat      go to state 193
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 163

  101 for_stat: FOR '(' . expression_stat @30 simple_expr ';' @31 expression @32 ')' for_operation

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    var              go to state 59
    expression_stat  go to state 194
    expression       go to state 126
    simple_expr      go to state 61
    additive_expr    go to state 62
    term             go to state 63
    function         go to state 64
    factor           go to state 65


state 164

  173 exit_stat: EXIT ';' .

    $default  reduce using rule 173 (exit_stat)


state 165

   97 repeat_until_stat: REPEAT @28 . do_statement_list UNTIL '(' expression ')' @29 ';'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    CONTINUE   shift, and go to state 186
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 188
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    $default  reduce using rule 91 (do_statement_list)

    var                go to state 59
    statement          go to state 189
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    do_statement_list  go to state 195
    do_statement       go to state 191
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    break_stat         go to state 192
    continue_stat      go to state 193
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 166

   58 statement_list: statement_list . statement
  132 compound_stat: '{' statement_list . '}'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 112
    '}'        shift, and go to state 196
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    var                go to state 59
    statement          go to state 169
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 167

   12 return_stat: RETURN . factor ';'

    ID         shift, and go to state 128
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    '('        shift, and go to state 57

    var     go to state 79
    factor  go to state 197


state 168

    7 block: @2 function_parentheses @3 '{' declaration_list @4 proc_dec_list @5 statement_list return_stat . '}'

    '}'  shift, and go to state 198


state 169

   58 statement_list: statement_list statement .

    $default  reduce using rule 58 (statement_list)


state 170

  133 expression_stat: expression ';' .

    $default  reduce using rule 133 (expression_stat)


state 171

  160 function: ID '(' call_value_list ')' .

    $default  reduce using rule 160 (function)


state 172

  162 call_value_list: call_value_list ',' . call_value_stat

    ID  shift, and go to state 128

    var              go to state 129
    call_value_stat  go to state 199


state 173

   51 arraylist: '[' expression . @20 ']' arraylist

    $default  reduce using rule 50 (@20)

    @20  go to state 200


state 174

  158 function: ODD_EVAL '(' factor ')' .

    $default  reduce using rule 158 (function)


state 175

  159 function: SQRT '(' factor ')' .

    $default  reduce using rule 159 (function)


state 176

  136 expression: var @38 '=' expression .

    $default  reduce using rule 136 (expression)


state 177

   54 decarraylist: '[' expression ']' @21 decarraylist .

    $default  reduce using rule 54 (decarraylist)


state 178

   38 constdec_id_list: constdec_id_list ',' ID @16 '=' . expression

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 201
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 179

   22 proc_dec_stat: PROCEDURE ID @8 @9 block . @10 ';'

    $default  reduce using rule 21 (@10)

    @10  go to state 202


state 180

  129 read_stat: READ readVar ';' .

    $default  reduce using rule 129 (read_stat)


state 181

  131 readVar: readVar ',' . var

    ID  shift, and go to state 128

    var  go to state 203


state 182

  128 write_stat: WRITE @36 expression . @37 ';'

    $default  reduce using rule 127 (@37)

    @37  go to state 204


state 183

   73 if_stat: IF '(' expression . ')' @22 if_statement_list ELSE_stat

    ')'  shift, and go to state 205


state 184

  114 switch_case_stat: SWITCH '(' var . @34 ')' case_list

    $default  reduce using rule 113 (@34)

    @34  go to state 206


state 185

   85 while_stat: WHILE @24 '(' . expression ')' @25 do_statement_list

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 207
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 186

  112 continue_stat: CONTINUE . @33 ';'

    $default  reduce using rule 111 (@33)

    @33  go to state 208


state 187

  110 break_stat: BREAK . ';'

    ';'  shift, and go to state 209


state 188

   89 do_statement_list: '{' . do_statement_list do_statement '}'
  132 compound_stat: '{' . statement_list '}'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    CONTINUE   shift, and go to state 186
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 188
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    ID         [reduce using rule 60 (statement_list)]
    ID         [reduce using rule 91 (do_statement_list)]
    NUM        [reduce using rule 60 (statement_list)]
    NUM        [reduce using rule 91 (do_statement_list)]
    TRUE       [reduce using rule 60 (statement_list)]
    TRUE       [reduce using rule 91 (do_statement_list)]
    FALSE      [reduce using rule 60 (statement_list)]
    FALSE      [reduce using rule 91 (do_statement_list)]
    FLOATNUM   [reduce using rule 60 (statement_list)]
    FLOATNUM   [reduce using rule 91 (do_statement_list)]
    CHARACTER  [reduce using rule 60 (statement_list)]
    CHARACTER  [reduce using rule 91 (do_statement_list)]
    ODD_EVAL   [reduce using rule 60 (statement_list)]
    ODD_EVAL   [reduce using rule 91 (do_statement_list)]
    SQRT       [reduce using rule 60 (statement_list)]
    SQRT       [reduce using rule 91 (do_statement_list)]
    READ       [reduce using rule 60 (statement_list)]
    READ       [reduce using rule 91 (do_statement_list)]
    WRITE      [reduce using rule 60 (statement_list)]
    WRITE      [reduce using rule 91 (do_statement_list)]
    IF         [reduce using rule 60 (statement_list)]
    IF         [reduce using rule 91 (do_statement_list)]
    SWITCH     [reduce using rule 60 (statement_list)]
    SWITCH     [reduce using rule 91 (do_statement_list)]
    WHILE      [reduce using rule 60 (statement_list)]
    WHILE      [reduce using rule 91 (do_statement_list)]
    DO         [reduce using rule 60 (statement_list)]
    DO         [reduce using rule 91 (do_statement_list)]
    FOR        [reduce using rule 60 (statement_list)]
    FOR        [reduce using rule 91 (do_statement_list)]
    CONTINUE   [reduce using rule 91 (do_statement_list)]
    BREAK      [reduce using rule 91 (do_statement_list)]
    EXIT       [reduce using rule 60 (statement_list)]
    EXIT       [reduce using rule 91 (do_statement_list)]
    REPEAT     [reduce using rule 60 (statement_list)]
    REPEAT     [reduce using rule 91 (do_statement_list)]
    '{'        [reduce using rule 60 (statement_list)]
    '{'        [reduce using rule 91 (do_statement_list)]
    '('        [reduce using rule 60 (statement_list)]
    '('        [reduce using rule 91 (do_statement_list)]
    ';'        [reduce using rule 60 (statement_list)]
    ';'        [reduce using rule 91 (do_statement_list)]
    '!'        [reduce using rule 60 (statement_list)]
    '!'        [reduce using rule 91 (do_statement_list)]
    $default   reduce using rule 60 (statement_list)

    var                go to state 59
    statement_list     go to state 166
    statement          go to state 210
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    do_statement_list  go to state 211
    do_statement       go to state 191
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    break_stat         go to state 192
    continue_stat      go to state 193
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 189

   92 do_statement: statement .

    $default  reduce using rule 92 (do_statement)


state 190

   88 do_while_stat: DO @26 do_statement_list . WHILE '(' expression ')' @27 ';'

    WHILE  shift, and go to state 212


state 191

   90 do_statement_list: do_statement .

    $default  reduce using rule 90 (do_statement_list)


state 192

   93 do_statement: break_stat .

    $default  reduce using rule 93 (do_statement)


state 193

   94 do_statement: continue_stat .

    $default  reduce using rule 94 (do_statement)


state 194

  101 for_stat: FOR '(' expression_stat . @30 simple_expr ';' @31 expression @32 ')' for_operation

    $default  reduce using rule 98 (@30)

    @30  go to state 213


state 195

   97 repeat_until_stat: REPEAT @28 do_statement_list . UNTIL '(' expression ')' @29 ';'

    UNTIL  shift, and go to state 214


state 196

  132 compound_stat: '{' statement_list '}' .

    $default  reduce using rule 132 (compound_stat)


state 197

   12 return_stat: RETURN factor . ';'

    ';'  shift, and go to state 215


state 198

    7 block: @2 function_parentheses @3 '{' declaration_list @4 proc_dec_list @5 statement_list return_stat '}' .

    $default  reduce using rule 7 (block)


state 199

  162 call_value_list: call_value_list ',' call_value_stat .

    $default  reduce using rule 162 (call_value_list)


state 200

   51 arraylist: '[' expression @20 . ']' arraylist

    ']'  shift, and go to state 216


state 201

   38 constdec_id_list: constdec_id_list ',' ID @16 '=' expression .

    $default  reduce using rule 38 (constdec_id_list)


state 202

   22 proc_dec_stat: PROCEDURE ID @8 @9 block @10 . ';'

    ';'  shift, and go to state 217


state 203

  131 readVar: readVar ',' var .

    $default  reduce using rule 131 (readVar)


state 204

  128 write_stat: WRITE @36 expression @37 . ';'

    ';'  shift, and go to state 218


state 205

   73 if_stat: IF '(' expression ')' . @22 if_statement_list ELSE_stat

    $default  reduce using rule 72 (@22)

    @22  go to state 219


state 206

  114 switch_case_stat: SWITCH '(' var @34 . ')' case_list

    ')'  shift, and go to state 220


state 207

   85 while_stat: WHILE @24 '(' expression . ')' @25 do_statement_list

    ')'  shift, and go to state 221


state 208

  112 continue_stat: CONTINUE @33 . ';'

    ';'  shift, and go to state 222


state 209

  110 break_stat: BREAK ';' .

    $default  reduce using rule 110 (break_stat)


state 210

   59 statement_list: statement .
   92 do_statement: statement .

    ID         reduce using rule 59 (statement_list)
    ID         [reduce using rule 92 (do_statement)]
    NUM        reduce using rule 59 (statement_list)
    NUM        [reduce using rule 92 (do_statement)]
    TRUE       reduce using rule 59 (statement_list)
    TRUE       [reduce using rule 92 (do_statement)]
    FALSE      reduce using rule 59 (statement_list)
    FALSE      [reduce using rule 92 (do_statement)]
    FLOATNUM   reduce using rule 59 (statement_list)
    FLOATNUM   [reduce using rule 92 (do_statement)]
    CHARACTER  reduce using rule 59 (statement_list)
    CHARACTER  [reduce using rule 92 (do_statement)]
    ODD_EVAL   reduce using rule 59 (statement_list)
    ODD_EVAL   [reduce using rule 92 (do_statement)]
    SQRT       reduce using rule 59 (statement_list)
    SQRT       [reduce using rule 92 (do_statement)]
    READ       reduce using rule 59 (statement_list)
    READ       [reduce using rule 92 (do_statement)]
    WRITE      reduce using rule 59 (statement_list)
    WRITE      [reduce using rule 92 (do_statement)]
    IF         reduce using rule 59 (statement_list)
    IF         [reduce using rule 92 (do_statement)]
    SWITCH     reduce using rule 59 (statement_list)
    SWITCH     [reduce using rule 92 (do_statement)]
    WHILE      reduce using rule 59 (statement_list)
    WHILE      [reduce using rule 92 (do_statement)]
    DO         reduce using rule 59 (statement_list)
    DO         [reduce using rule 92 (do_statement)]
    FOR        reduce using rule 59 (statement_list)
    FOR        [reduce using rule 92 (do_statement)]
    CONTINUE   reduce using rule 92 (do_statement)
    BREAK      reduce using rule 92 (do_statement)
    EXIT       reduce using rule 59 (statement_list)
    EXIT       [reduce using rule 92 (do_statement)]
    REPEAT     reduce using rule 59 (statement_list)
    REPEAT     [reduce using rule 92 (do_statement)]
    '{'        reduce using rule 59 (statement_list)
    '{'        [reduce using rule 92 (do_statement)]
    '('        reduce using rule 59 (statement_list)
    '('        [reduce using rule 92 (do_statement)]
    ';'        reduce using rule 59 (statement_list)
    ';'        [reduce using rule 92 (do_statement)]
    '!'        reduce using rule 59 (statement_list)
    '!'        [reduce using rule 92 (do_statement)]
    $default   reduce using rule 59 (statement_list)


state 211

   89 do_statement_list: '{' do_statement_list . do_statement '}'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    CONTINUE   shift, and go to state 186
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 112
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    var                go to state 59
    statement          go to state 189
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    do_statement       go to state 223
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    break_stat         go to state 192
    continue_stat      go to state 193
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 212

   88 do_while_stat: DO @26 do_statement_list WHILE . '(' expression ')' @27 ';'

    '('  shift, and go to state 224


state 213

  101 for_stat: FOR '(' expression_stat @30 . simple_expr ';' @31 expression @32 ')' for_operation

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 79
    simple_expr    go to state 225
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 214

   97 repeat_until_stat: REPEAT @28 do_statement_list UNTIL . '(' expression ')' @29 ';'

    '('  shift, and go to state 226


state 215

   12 return_stat: RETURN factor ';' .

    $default  reduce using rule 12 (return_stat)


state 216

   51 arraylist: '[' expression @20 ']' . arraylist

    '['  shift, and go to state 132

    $default  reduce using rule 52 (arraylist)

    arraylist  go to state 227


state 217

   22 proc_dec_stat: PROCEDURE ID @8 @9 block @10 ';' .

    $default  reduce using rule 22 (proc_dec_stat)


state 218

  128 write_stat: WRITE @36 expression @37 ';' .

    $default  reduce using rule 128 (write_stat)


state 219

   73 if_stat: IF '(' expression ')' @22 . if_statement_list ELSE_stat

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    CONTINUE   shift, and go to state 186
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 228
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    ID         [reduce using rule 79 (if_statement_list)]
    NUM        [reduce using rule 79 (if_statement_list)]
    TRUE       [reduce using rule 79 (if_statement_list)]
    FALSE      [reduce using rule 79 (if_statement_list)]
    FLOATNUM   [reduce using rule 79 (if_statement_list)]
    CHARACTER  [reduce using rule 79 (if_statement_list)]
    ODD_EVAL   [reduce using rule 79 (if_statement_list)]
    SQRT       [reduce using rule 79 (if_statement_list)]
    READ       [reduce using rule 79 (if_statement_list)]
    WRITE      [reduce using rule 79 (if_statement_list)]
    IF         [reduce using rule 79 (if_statement_list)]
    SWITCH     [reduce using rule 79 (if_statement_list)]
    WHILE      [reduce using rule 79 (if_statement_list)]
    DO         [reduce using rule 79 (if_statement_list)]
    FOR        [reduce using rule 79 (if_statement_list)]
    CONTINUE   [reduce using rule 79 (if_statement_list)]
    BREAK      [reduce using rule 79 (if_statement_list)]
    EXIT       [reduce using rule 79 (if_statement_list)]
    REPEAT     [reduce using rule 79 (if_statement_list)]
    '{'        [reduce using rule 79 (if_statement_list)]
    '('        [reduce using rule 79 (if_statement_list)]
    ';'        [reduce using rule 79 (if_statement_list)]
    '!'        [reduce using rule 79 (if_statement_list)]
    $default   reduce using rule 79 (if_statement_list)

    var                go to state 59
    statement          go to state 229
    if_stat            go to state 116
    if_statement_list  go to state 230
    if_statement       go to state 231
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    break_stat         go to state 232
    continue_stat      go to state 233
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 220

  114 switch_case_stat: SWITCH '(' var @34 ')' . case_list

    '{'  shift, and go to state 234

    '{'       [reduce using rule 119 (case_stat_list)]
    $default  reduce using rule 119 (case_stat_list)

    case_list       go to state 235
    case_stat_list  go to state 236


state 221

   85 while_stat: WHILE @24 '(' expression ')' . @25 do_statement_list

    $default  reduce using rule 84 (@25)

    @25  go to state 237


state 222

  112 continue_stat: CONTINUE @33 ';' .

    $default  reduce using rule 112 (continue_stat)


state 223

   89 do_statement_list: '{' do_statement_list do_statement . '}'

    '}'  shift, and go to state 238


state 224

   88 do_while_stat: DO @26 do_statement_list WHILE '(' . expression ')' @27 ';'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 239
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 225

  101 for_stat: FOR '(' expression_stat @30 simple_expr . ';' @31 expression @32 ')' for_operation

    ';'  shift, and go to state 240


state 226

   97 repeat_until_stat: REPEAT @28 do_statement_list UNTIL '(' . expression ')' @29 ';'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 241
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 227

   51 arraylist: '[' expression @20 ']' arraylist .

    $default  reduce using rule 51 (arraylist)


state 228

   77 if_statement_list: '{' . if_statement_list if_statement '}'
  132 compound_stat: '{' . statement_list '}'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    CONTINUE   shift, and go to state 186
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 228
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    ID         [reduce using rule 60 (statement_list)]
    ID         [reduce using rule 79 (if_statement_list)]
    NUM        [reduce using rule 60 (statement_list)]
    NUM        [reduce using rule 79 (if_statement_list)]
    TRUE       [reduce using rule 60 (statement_list)]
    TRUE       [reduce using rule 79 (if_statement_list)]
    FALSE      [reduce using rule 60 (statement_list)]
    FALSE      [reduce using rule 79 (if_statement_list)]
    FLOATNUM   [reduce using rule 60 (statement_list)]
    FLOATNUM   [reduce using rule 79 (if_statement_list)]
    CHARACTER  [reduce using rule 60 (statement_list)]
    CHARACTER  [reduce using rule 79 (if_statement_list)]
    ODD_EVAL   [reduce using rule 60 (statement_list)]
    ODD_EVAL   [reduce using rule 79 (if_statement_list)]
    SQRT       [reduce using rule 60 (statement_list)]
    SQRT       [reduce using rule 79 (if_statement_list)]
    READ       [reduce using rule 60 (statement_list)]
    READ       [reduce using rule 79 (if_statement_list)]
    WRITE      [reduce using rule 60 (statement_list)]
    WRITE      [reduce using rule 79 (if_statement_list)]
    IF         [reduce using rule 60 (statement_list)]
    IF         [reduce using rule 79 (if_statement_list)]
    SWITCH     [reduce using rule 60 (statement_list)]
    SWITCH     [reduce using rule 79 (if_statement_list)]
    WHILE      [reduce using rule 60 (statement_list)]
    WHILE      [reduce using rule 79 (if_statement_list)]
    DO         [reduce using rule 60 (statement_list)]
    DO         [reduce using rule 79 (if_statement_list)]
    FOR        [reduce using rule 60 (statement_list)]
    FOR        [reduce using rule 79 (if_statement_list)]
    CONTINUE   [reduce using rule 79 (if_statement_list)]
    BREAK      [reduce using rule 79 (if_statement_list)]
    EXIT       [reduce using rule 60 (statement_list)]
    EXIT       [reduce using rule 79 (if_statement_list)]
    REPEAT     [reduce using rule 60 (statement_list)]
    REPEAT     [reduce using rule 79 (if_statement_list)]
    '{'        [reduce using rule 60 (statement_list)]
    '{'        [reduce using rule 79 (if_statement_list)]
    '('        [reduce using rule 60 (statement_list)]
    '('        [reduce using rule 79 (if_statement_list)]
    ';'        [reduce using rule 60 (statement_list)]
    ';'        [reduce using rule 79 (if_statement_list)]
    '!'        [reduce using rule 60 (statement_list)]
    '!'        [reduce using rule 79 (if_statement_list)]
    $default   reduce using rule 60 (statement_list)

    var                go to state 59
    statement_list     go to state 166
    statement          go to state 242
    if_stat            go to state 116
    if_statement_list  go to state 243
    if_statement       go to state 231
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    break_stat         go to state 232
    continue_stat      go to state 233
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 229

   82 if_statement: statement .

    $default  reduce using rule 82 (if_statement)


state 230

   73 if_stat: IF '(' expression ')' @22 if_statement_list . ELSE_stat

    ELSE  shift, and go to state 244

    ELSE      [reduce using rule 76 (ELSE_stat)]
    $default  reduce using rule 76 (ELSE_stat)

    ELSE_stat  go to state 245


state 231

   78 if_statement_list: if_statement .

    $default  reduce using rule 78 (if_statement_list)


state 232

   80 if_statement: break_stat .

    $default  reduce using rule 80 (if_statement)


state 233

   81 if_statement: continue_stat .

    $default  reduce using rule 81 (if_statement)


state 234

  115 case_list: '{' . case_list '}'

    '{'  shift, and go to state 234

    $default  reduce using rule 119 (case_stat_list)

    case_list       go to state 246
    case_stat_list  go to state 236


state 235

  114 switch_case_stat: SWITCH '(' var @34 ')' case_list .

    $default  reduce using rule 114 (switch_case_stat)


state 236

  116 case_list: case_stat_list .
  117 case_stat_list: case_stat_list . default_stat
  118               | case_stat_list . case_stat

    CASE     shift, and go to state 247
    DEFAULT  shift, and go to state 248

    CASE      [reduce using rule 116 (case_list)]
    DEFAULT   [reduce using rule 116 (case_list)]
    $default  reduce using rule 116 (case_list)

    case_stat     go to state 249
    default_stat  go to state 250


state 237

   85 while_stat: WHILE @24 '(' expression ')' @25 . do_statement_list

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    CONTINUE   shift, and go to state 186
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 188
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    ID         [reduce using rule 91 (do_statement_list)]
    NUM        [reduce using rule 91 (do_statement_list)]
    TRUE       [reduce using rule 91 (do_statement_list)]
    FALSE      [reduce using rule 91 (do_statement_list)]
    FLOATNUM   [reduce using rule 91 (do_statement_list)]
    CHARACTER  [reduce using rule 91 (do_statement_list)]
    ODD_EVAL   [reduce using rule 91 (do_statement_list)]
    SQRT       [reduce using rule 91 (do_statement_list)]
    READ       [reduce using rule 91 (do_statement_list)]
    WRITE      [reduce using rule 91 (do_statement_list)]
    IF         [reduce using rule 91 (do_statement_list)]
    SWITCH     [reduce using rule 91 (do_statement_list)]
    WHILE      [reduce using rule 91 (do_statement_list)]
    DO         [reduce using rule 91 (do_statement_list)]
    FOR        [reduce using rule 91 (do_statement_list)]
    CONTINUE   [reduce using rule 91 (do_statement_list)]
    BREAK      [reduce using rule 91 (do_statement_list)]
    EXIT       [reduce using rule 91 (do_statement_list)]
    REPEAT     [reduce using rule 91 (do_statement_list)]
    '{'        [reduce using rule 91 (do_statement_list)]
    '('        [reduce using rule 91 (do_statement_list)]
    ';'        [reduce using rule 91 (do_statement_list)]
    '!'        [reduce using rule 91 (do_statement_list)]
    $default   reduce using rule 91 (do_statement_list)

    var                go to state 59
    statement          go to state 189
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    do_statement_list  go to state 251
    do_statement       go to state 191
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    break_stat         go to state 192
    continue_stat      go to state 193
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 238

   89 do_statement_list: '{' do_statement_list do_statement '}' .

    $default  reduce using rule 89 (do_statement_list)


state 239

   88 do_while_stat: DO @26 do_statement_list WHILE '(' expression . ')' @27 ';'

    ')'  shift, and go to state 252


state 240

  101 for_stat: FOR '(' expression_stat @30 simple_expr ';' . @31 expression @32 ')' for_operation

    $default  reduce using rule 99 (@31)

    @31  go to state 253


state 241

   97 repeat_until_stat: REPEAT @28 do_statement_list UNTIL '(' expression . ')' @29 ';'

    ')'  shift, and go to state 254


state 242

   59 statement_list: statement .
   82 if_statement: statement .

    ID         reduce using rule 59 (statement_list)
    ID         [reduce using rule 82 (if_statement)]
    NUM        reduce using rule 59 (statement_list)
    NUM        [reduce using rule 82 (if_statement)]
    TRUE       reduce using rule 59 (statement_list)
    TRUE       [reduce using rule 82 (if_statement)]
    FALSE      reduce using rule 59 (statement_list)
    FALSE      [reduce using rule 82 (if_statement)]
    FLOATNUM   reduce using rule 59 (statement_list)
    FLOATNUM   [reduce using rule 82 (if_statement)]
    CHARACTER  reduce using rule 59 (statement_list)
    CHARACTER  [reduce using rule 82 (if_statement)]
    ODD_EVAL   reduce using rule 59 (statement_list)
    ODD_EVAL   [reduce using rule 82 (if_statement)]
    SQRT       reduce using rule 59 (statement_list)
    SQRT       [reduce using rule 82 (if_statement)]
    READ       reduce using rule 59 (statement_list)
    READ       [reduce using rule 82 (if_statement)]
    WRITE      reduce using rule 59 (statement_list)
    WRITE      [reduce using rule 82 (if_statement)]
    IF         reduce using rule 59 (statement_list)
    IF         [reduce using rule 82 (if_statement)]
    SWITCH     reduce using rule 59 (statement_list)
    SWITCH     [reduce using rule 82 (if_statement)]
    WHILE      reduce using rule 59 (statement_list)
    WHILE      [reduce using rule 82 (if_statement)]
    DO         reduce using rule 59 (statement_list)
    DO         [reduce using rule 82 (if_statement)]
    FOR        reduce using rule 59 (statement_list)
    FOR        [reduce using rule 82 (if_statement)]
    CONTINUE   reduce using rule 82 (if_statement)
    BREAK      reduce using rule 82 (if_statement)
    EXIT       reduce using rule 59 (statement_list)
    EXIT       [reduce using rule 82 (if_statement)]
    REPEAT     reduce using rule 59 (statement_list)
    REPEAT     [reduce using rule 82 (if_statement)]
    '{'        reduce using rule 59 (statement_list)
    '{'        [reduce using rule 82 (if_statement)]
    '('        reduce using rule 59 (statement_list)
    '('        [reduce using rule 82 (if_statement)]
    ';'        reduce using rule 59 (statement_list)
    ';'        [reduce using rule 82 (if_statement)]
    '!'        reduce using rule 59 (statement_list)
    '!'        [reduce using rule 82 (if_statement)]
    $default   reduce using rule 59 (statement_list)


state 243

   77 if_statement_list: '{' if_statement_list . if_statement '}'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    CONTINUE   shift, and go to state 186
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 112
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    var                go to state 59
    statement          go to state 229
    if_stat            go to state 116
    if_statement       go to state 255
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    break_stat         go to state 232
    continue_stat      go to state 233
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 244

   75 ELSE_stat: ELSE . @23 if_statement_list

    $default  reduce using rule 74 (@23)

    @23  go to state 256


state 245

   73 if_stat: IF '(' expression ')' @22 if_statement_list ELSE_stat .

    $default  reduce using rule 73 (if_stat)


state 246

  115 case_list: '{' case_list . '}'

    '}'  shift, and go to state 257


state 247

  121 case_stat: CASE . case_num ':' @35 statement_list case_break_stat

    NUM  shift, and go to state 258

    case_num  go to state 259


state 248

  125 default_stat: DEFAULT . ':' statement

    ':'  shift, and go to state 260


state 249

  118 case_stat_list: case_stat_list case_stat .

    $default  reduce using rule 118 (case_stat_list)


state 250

  117 case_stat_list: case_stat_list default_stat .

    $default  reduce using rule 117 (case_stat_list)


state 251

   85 while_stat: WHILE @24 '(' expression ')' @25 do_statement_list .

    $default  reduce using rule 85 (while_stat)


state 252

   88 do_while_stat: DO @26 do_statement_list WHILE '(' expression ')' . @27 ';'

    $default  reduce using rule 87 (@27)

    @27  go to state 261


state 253

  101 for_stat: FOR '(' expression_stat @30 simple_expr ';' @31 . expression @32 ')' for_operation

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    '('        shift, and go to state 57
    '!'        shift, and go to state 58

    var            go to state 59
    expression     go to state 262
    simple_expr    go to state 61
    additive_expr  go to state 62
    term           go to state 63
    function       go to state 64
    factor         go to state 65


state 254

   97 repeat_until_stat: REPEAT @28 do_statement_list UNTIL '(' expression ')' . @29 ';'

    $default  reduce using rule 96 (@29)

    @29  go to state 263


state 255

   77 if_statement_list: '{' if_statement_list if_statement . '}'

    '}'  shift, and go to state 264


state 256

   75 ELSE_stat: ELSE @23 . if_statement_list

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    CONTINUE   shift, and go to state 186
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 228
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    ID         [reduce using rule 79 (if_statement_list)]
    NUM        [reduce using rule 79 (if_statement_list)]
    TRUE       [reduce using rule 79 (if_statement_list)]
    FALSE      [reduce using rule 79 (if_statement_list)]
    FLOATNUM   [reduce using rule 79 (if_statement_list)]
    CHARACTER  [reduce using rule 79 (if_statement_list)]
    ODD_EVAL   [reduce using rule 79 (if_statement_list)]
    SQRT       [reduce using rule 79 (if_statement_list)]
    READ       [reduce using rule 79 (if_statement_list)]
    WRITE      [reduce using rule 79 (if_statement_list)]
    IF         [reduce using rule 79 (if_statement_list)]
    SWITCH     [reduce using rule 79 (if_statement_list)]
    WHILE      [reduce using rule 79 (if_statement_list)]
    DO         [reduce using rule 79 (if_statement_list)]
    FOR        [reduce using rule 79 (if_statement_list)]
    CONTINUE   [reduce using rule 79 (if_statement_list)]
    BREAK      [reduce using rule 79 (if_statement_list)]
    EXIT       [reduce using rule 79 (if_statement_list)]
    REPEAT     [reduce using rule 79 (if_statement_list)]
    '{'        [reduce using rule 79 (if_statement_list)]
    '('        [reduce using rule 79 (if_statement_list)]
    ';'        [reduce using rule 79 (if_statement_list)]
    '!'        [reduce using rule 79 (if_statement_list)]
    $default   reduce using rule 79 (if_statement_list)

    var                go to state 59
    statement          go to state 229
    if_stat            go to state 116
    if_statement_list  go to state 265
    if_statement       go to state 231
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    break_stat         go to state 232
    continue_stat      go to state 233
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 257

  115 case_list: '{' case_list '}' .

    $default  reduce using rule 115 (case_list)


state 258

  124 case_num: NUM .

    $default  reduce using rule 124 (case_num)


state 259

  121 case_stat: CASE case_num . ':' @35 statement_list case_break_stat

    ':'  shift, and go to state 266


state 260

  125 default_stat: DEFAULT ':' . statement

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 112
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    var                go to state 59
    statement          go to state 267
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 261

   88 do_while_stat: DO @26 do_statement_list WHILE '(' expression ')' @27 . ';'

    ';'  shift, and go to state 268


state 262

  101 for_stat: FOR '(' expression_stat @30 simple_expr ';' @31 expression . @32 ')' for_operation

    $default  reduce using rule 100 (@32)

    @32  go to state 269


state 263

   97 repeat_until_stat: REPEAT @28 do_statement_list UNTIL '(' expression ')' @29 . ';'

    ';'  shift, and go to state 270


state 264

   77 if_statement_list: '{' if_statement_list if_statement '}' .

    $default  reduce using rule 77 (if_statement_list)


state 265

   75 ELSE_stat: ELSE @23 if_statement_list .

    $default  reduce using rule 75 (ELSE_stat)


state 266

  121 case_stat: CASE case_num ':' . @35 statement_list case_break_stat

    $default  reduce using rule 120 (@35)

    @35  go to state 271


state 267

  125 default_stat: DEFAULT ':' statement .

    $default  reduce using rule 125 (default_stat)


state 268

   88 do_while_stat: DO @26 do_statement_list WHILE '(' expression ')' @27 ';' .

    $default  reduce using rule 88 (do_while_stat)


state 269

  101 for_stat: FOR '(' expression_stat @30 simple_expr ';' @31 expression @32 . ')' for_operation

    ')'  shift, and go to state 272


state 270

   97 repeat_until_stat: REPEAT @28 do_statement_list UNTIL '(' expression ')' @29 ';' .

    $default  reduce using rule 97 (repeat_until_stat)


state 271

  121 case_stat: CASE case_num ':' @35 . statement_list case_break_stat

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 112
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    ID         [reduce using rule 60 (statement_list)]
    NUM        [reduce using rule 60 (statement_list)]
    TRUE       [reduce using rule 60 (statement_list)]
    FALSE      [reduce using rule 60 (statement_list)]
    FLOATNUM   [reduce using rule 60 (statement_list)]
    CHARACTER  [reduce using rule 60 (statement_list)]
    ODD_EVAL   [reduce using rule 60 (statement_list)]
    SQRT       [reduce using rule 60 (statement_list)]
    READ       [reduce using rule 60 (statement_list)]
    WRITE      [reduce using rule 60 (statement_list)]
    IF         [reduce using rule 60 (statement_list)]
    SWITCH     [reduce using rule 60 (statement_list)]
    WHILE      [reduce using rule 60 (statement_list)]
    DO         [reduce using rule 60 (statement_list)]
    FOR        [reduce using rule 60 (statement_list)]
    EXIT       [reduce using rule 60 (statement_list)]
    REPEAT     [reduce using rule 60 (statement_list)]
    '{'        [reduce using rule 60 (statement_list)]
    '('        [reduce using rule 60 (statement_list)]
    ';'        [reduce using rule 60 (statement_list)]
    '!'        [reduce using rule 60 (statement_list)]
    $default   reduce using rule 60 (statement_list)

    var                go to state 59
    statement_list     go to state 273
    statement          go to state 115
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 272

  101 for_stat: FOR '(' expression_stat @30 simple_expr ';' @31 expression @32 ')' . for_operation

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 274
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    var                go to state 59
    statement          go to state 275
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    for_operation      go to state 276
    break_stat         go to state 277
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 273

   58 statement_list: statement_list . statement
  121 case_stat: CASE case_num ':' @35 statement_list . case_break_stat

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 112
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    ID         [reduce using rule 123 (case_break_stat)]
    NUM        [reduce using rule 123 (case_break_stat)]
    TRUE       [reduce using rule 123 (case_break_stat)]
    FALSE      [reduce using rule 123 (case_break_stat)]
    FLOATNUM   [reduce using rule 123 (case_break_stat)]
    CHARACTER  [reduce using rule 123 (case_break_stat)]
    ODD_EVAL   [reduce using rule 123 (case_break_stat)]
    SQRT       [reduce using rule 123 (case_break_stat)]
    READ       [reduce using rule 123 (case_break_stat)]
    WRITE      [reduce using rule 123 (case_break_stat)]
    IF         [reduce using rule 123 (case_break_stat)]
    SWITCH     [reduce using rule 123 (case_break_stat)]
    WHILE      [reduce using rule 123 (case_break_stat)]
    DO         [reduce using rule 123 (case_break_stat)]
    FOR        [reduce using rule 123 (case_break_stat)]
    BREAK      [reduce using rule 123 (case_break_stat)]
    EXIT       [reduce using rule 123 (case_break_stat)]
    REPEAT     [reduce using rule 123 (case_break_stat)]
    '{'        [reduce using rule 123 (case_break_stat)]
    '('        [reduce using rule 123 (case_break_stat)]
    ';'        [reduce using rule 123 (case_break_stat)]
    '!'        [reduce using rule 123 (case_break_stat)]
    $default   reduce using rule 123 (case_break_stat)

    var                go to state 59
    statement          go to state 169
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    break_stat         go to state 278
    switch_case_stat   go to state 121
    case_break_stat    go to state 279
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 274

  102 for_operation: '{' . for_opstatlist '}'
  132 compound_stat: '{' . statement_list '}'

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    CONTINUE   shift, and go to state 186
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 112
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    ID         [reduce using rule 60 (statement_list)]
    NUM        [reduce using rule 60 (statement_list)]
    TRUE       [reduce using rule 60 (statement_list)]
    FALSE      [reduce using rule 60 (statement_list)]
    FLOATNUM   [reduce using rule 60 (statement_list)]
    CHARACTER  [reduce using rule 60 (statement_list)]
    ODD_EVAL   [reduce using rule 60 (statement_list)]
    SQRT       [reduce using rule 60 (statement_list)]
    READ       [reduce using rule 60 (statement_list)]
    WRITE      [reduce using rule 60 (statement_list)]
    IF         [reduce using rule 60 (statement_list)]
    SWITCH     [reduce using rule 60 (statement_list)]
    WHILE      [reduce using rule 60 (statement_list)]
    DO         [reduce using rule 60 (statement_list)]
    FOR        [reduce using rule 60 (statement_list)]
    EXIT       [reduce using rule 60 (statement_list)]
    REPEAT     [reduce using rule 60 (statement_list)]
    '{'        [reduce using rule 60 (statement_list)]
    '('        [reduce using rule 60 (statement_list)]
    ';'        [reduce using rule 60 (statement_list)]
    '!'        [reduce using rule 60 (statement_list)]
    $default   reduce using rule 60 (statement_list)

    var                go to state 59
    statement_list     go to state 166
    statement          go to state 280
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    for_opstatlist     go to state 281
    for_opstat         go to state 282
    break_stat         go to state 283
    continue_stat      go to state 284
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 275

  103 for_operation: statement .

    $default  reduce using rule 103 (for_operation)


state 276

  101 for_stat: FOR '(' expression_stat @30 simple_expr ';' @31 expression @32 ')' for_operation .

    $default  reduce using rule 101 (for_stat)


state 277

  104 for_operation: break_stat .

    $default  reduce using rule 104 (for_operation)


state 278

  122 case_break_stat: break_stat .

    $default  reduce using rule 122 (case_break_stat)


state 279

  121 case_stat: CASE case_num ':' @35 statement_list case_break_stat .

    $default  reduce using rule 121 (case_stat)


state 280

   59 statement_list: statement .
  107 for_opstat: statement .

    ID         reduce using rule 59 (statement_list)
    ID         [reduce using rule 107 (for_opstat)]
    NUM        reduce using rule 59 (statement_list)
    NUM        [reduce using rule 107 (for_opstat)]
    TRUE       reduce using rule 59 (statement_list)
    TRUE       [reduce using rule 107 (for_opstat)]
    FALSE      reduce using rule 59 (statement_list)
    FALSE      [reduce using rule 107 (for_opstat)]
    FLOATNUM   reduce using rule 59 (statement_list)
    FLOATNUM   [reduce using rule 107 (for_opstat)]
    CHARACTER  reduce using rule 59 (statement_list)
    CHARACTER  [reduce using rule 107 (for_opstat)]
    ODD_EVAL   reduce using rule 59 (statement_list)
    ODD_EVAL   [reduce using rule 107 (for_opstat)]
    SQRT       reduce using rule 59 (statement_list)
    SQRT       [reduce using rule 107 (for_opstat)]
    READ       reduce using rule 59 (statement_list)
    READ       [reduce using rule 107 (for_opstat)]
    WRITE      reduce using rule 59 (statement_list)
    WRITE      [reduce using rule 107 (for_opstat)]
    IF         reduce using rule 59 (statement_list)
    IF         [reduce using rule 107 (for_opstat)]
    SWITCH     reduce using rule 59 (statement_list)
    SWITCH     [reduce using rule 107 (for_opstat)]
    WHILE      reduce using rule 59 (statement_list)
    WHILE      [reduce using rule 107 (for_opstat)]
    DO         reduce using rule 59 (statement_list)
    DO         [reduce using rule 107 (for_opstat)]
    FOR        reduce using rule 59 (statement_list)
    FOR        [reduce using rule 107 (for_opstat)]
    CONTINUE   reduce using rule 107 (for_opstat)
    BREAK      reduce using rule 107 (for_opstat)
    EXIT       reduce using rule 59 (statement_list)
    EXIT       [reduce using rule 107 (for_opstat)]
    REPEAT     reduce using rule 59 (statement_list)
    REPEAT     [reduce using rule 107 (for_opstat)]
    '{'        reduce using rule 59 (statement_list)
    '{'        [reduce using rule 107 (for_opstat)]
    '}'        reduce using rule 59 (statement_list)
    '}'        [reduce using rule 107 (for_opstat)]
    '('        reduce using rule 59 (statement_list)
    '('        [reduce using rule 107 (for_opstat)]
    ';'        reduce using rule 59 (statement_list)
    ';'        [reduce using rule 107 (for_opstat)]
    '!'        reduce using rule 59 (statement_list)
    '!'        [reduce using rule 107 (for_opstat)]
    $default   reduce using rule 59 (statement_list)


state 281

  102 for_operation: '{' for_opstatlist . '}'
  105 for_opstatlist: for_opstatlist . for_opstat

    ID         shift, and go to state 49
    NUM        shift, and go to state 50
    TRUE       shift, and go to state 51
    FALSE      shift, and go to state 52
    FLOATNUM   shift, and go to state 53
    CHARACTER  shift, and go to state 54
    ODD_EVAL   shift, and go to state 55
    SQRT       shift, and go to state 56
    READ       shift, and go to state 103
    WRITE      shift, and go to state 104
    IF         shift, and go to state 105
    SWITCH     shift, and go to state 106
    WHILE      shift, and go to state 107
    DO         shift, and go to state 108
    FOR        shift, and go to state 109
    CONTINUE   shift, and go to state 186
    BREAK      shift, and go to state 187
    EXIT       shift, and go to state 110
    REPEAT     shift, and go to state 111
    '{'        shift, and go to state 112
    '}'        shift, and go to state 285
    '('        shift, and go to state 57
    ';'        shift, and go to state 113
    '!'        shift, and go to state 58

    var                go to state 59
    statement          go to state 286
    if_stat            go to state 116
    while_stat         go to state 117
    do_while_stat      go to state 118
    repeat_until_stat  go to state 119
    for_stat           go to state 120
    for_opstat         go to state 287
    break_stat         go to state 283
    continue_stat      go to state 284
    switch_case_stat   go to state 121
    write_stat         go to state 122
    read_stat          go to state 123
    compound_stat      go to state 124
    expression_stat    go to state 125
    expression         go to state 126
    simple_expr        go to state 61
    additive_expr      go to state 62
    term               go to state 63
    function           go to state 64
    factor             go to state 65
    exit_stat          go to state 127


state 282

  106 for_opstatlist: for_opstat .

    $default  reduce using rule 106 (for_opstatlist)


state 283

  108 for_opstat: break_stat .

    $default  reduce using rule 108 (for_opstat)


state 284

  109 for_opstat: continue_stat .

    $default  reduce using rule 109 (for_opstat)


state 285

  102 for_operation: '{' for_opstatlist '}' .

    $default  reduce using rule 102 (for_operation)


state 286

  107 for_opstat: statement .

    $default  reduce using rule 107 (for_opstat)


state 287

  105 for_opstatlist: for_opstatlist for_opstat .

    $default  reduce using rule 105 (for_opstatlist)
